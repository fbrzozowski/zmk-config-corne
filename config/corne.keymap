/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <185>;
    require-prior-idle-ms = <100>;
    flavor = "balanced";
    hold-trigger-on-release;
};

&lt {
    tapping-term-ms = <185>;
    flavor = "balanced";
    quick-tap-ms = <140>;
    require-prior-idle-ms = <150>;
};

/ {
    zmk,ble { bt-name = "KiciBoard"; };

    combos {
        compatible = "zmk,combos";

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <33 32>;
            layers = <0>;
        };

        spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <38 39>;
        };
    };

    behaviors {
        esc_grave: esc_grave {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
        };

        shift_cmd_tab: shift_cmd_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CMD_TAB";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LG(TAB)>;
        };

        shift_caps_words: shift_caps_words {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_WORDS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE         &kp Q        &kp W           &kp F           &kp P             &kp G                 &kp J                  &kp L             &kp U           &kp Y           &kp BACKSLASH  &none
&kp TAB            &mt LCTRL A  &mt LEFT_ALT R  &mt LEFT_GUI S  &mt LEFT_SHIFT T  &kp D                 &kp H                  &mt LEFT_SHIFT N  &mt LEFT_GUI E  &mt LEFT_ALT I  &mt LCTRL O    &none
&shift_caps_words  &kp Z        &kp X           &kp C           &kp V             &kp B                 &kp K                  &kp M             &kp COMMA       &kp DOT         &kp FSLH       &none
                                                &kp LEFT_ALT    &mo 3             &mt LEFT_GUI SPACE    &mt LEFT_SHIFT RETURN  &lt 2 BACKSPACE   &kp GRAVE
            >;

            label = "colemak";
        };

        qwerty {
            bindings = <
&esc_grave  &kp Q  &kp W  &kp E     &kp R  &kp T                  &kp Y                  &kp U            &kp I      &kp O    &kp P     &kp LBKT
&kp TAB     &kp A  &kp S  &kp D     &kp F  &kp G                  &kp H                  &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C     &kp V  &kp B                  &kp N                  &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                          &kp LALT  &mo 3  &mt LEFT_META SPACE    &mt LEFT_SHIFT RETURN  &lt 2 BACKSPACE  &kp LCTRL
            >;

            label = "qwerty";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&mt LG(LA(ESCAPE)) PERCENT  &kp ASTERISK    &kp AT_SIGN      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS     &kp DOUBLE_QUOTES    &mt F7 N7        &mt F8 N8        &mt F9 N9        &mt F10 AMPERSAND  &caps_word
&kp HASH                    &kp UNDERSCORE  &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL    &mt SEMICOLON COLON  &mt F4 NUMBER_4  &mt F5 N5        &mt F6 NUMBER_6  &mt F11 NUMBER_0   &none
&kp DOLLAR                  &kp CARET       &kp PERCENT      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS    &kp SQT              &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &mt F12 PERIOD     &none
                                                             &kp DELETE            &trans                 &kp SPACE    &kp RET              &trans           &kp NUMBER_0
            >;

            label = "numpad";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB            &kp LG(LC(Q))                                  &kp LC(LA(D))                         &kp LC(LA(F))                       &kp LC(LA(G))                        &kp K_VOLUME_UP      &kp DOWN_ARROW  &kp RIGHT         &kp PAGE_UP       &kp PAGE_DOWN     &none                 &none
&kp LA(LC(ENTER))  &mt LC(LA(LG(LEFT_ARROW))) LC(LA(LEFT_ARROW))  &mt LC(LA(DOWN_ARROW)) LC(LA(MINUS))  &mt LC(LA(UP_ARROW)) LC(LA(EQUAL))  &mt LC(LA(LG(RIGHT))) LA(LC(RIGHT))  &kp K_VOLUME_DOWN    &kp LEFT        &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &kp LA(NUMBER_4)      &none
&trans             &none                                          &none                                 &none                               &kp LC(LA(D))                        &kp K_MUTE           &kp UP_ARROW    &kp C_PREV        &kp C_PLAY_PAUSE  &kp C_NEXT        &kp LS(LG(NUMBER_4))  &kp LA(LG(N5))
                                                                                                        &kp LGUI                            &trans                               &kp SPACE            &kp RET         &trans            &kp RALT
            >;

            label = "navigation";
        };

        conditonal_layer {
            bindings = <
&bt BT_CLR   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_BLE      &to 1  &none  &none  &none  &none  &none
&sys_reset   &none         &none         &none         &none         &out OUT_USB      &to 0  &none  &none  &none  &none  &sys_reset
&bootloader  &none         &none         &none         &none         &studio_unlock    &none  &none  &none  &none  &none  &bootloader
                                         &none         &none         &none             &none  &none  &none
            >;

            label = "system";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conditional {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
